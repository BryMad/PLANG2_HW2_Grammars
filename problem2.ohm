program {
    Program = FuncDec* Exp 
    FuncDec = func id Params Body
    Params  = "(" ListOf<id, ","> ")"
    /* NOTE - instructions didn't say if the last ";" in a sequence of body elements was necessary or optional.
        Going w/ optional just bc I think it looks better when testing! */
    Body    = ListOf<Exp, ";"> ";"? "end"
    Exp     = if Exp1 else Exp  --conditional
            | Exp1
    Exp1    = Exp1 ("+" | "-") Exp2  --addition
            | Exp2
    Exp2    = Exp2 ("*" | "/") Exp3  --mult
            | Exp3
    Exp3    = "-" Exp3  --negative
            | Exp4
    Exp4    = Exp4 "!"  --factorial
            | Primary
    Primary = numlit
            | stringlit
            | id
            | FuncCall
            | "(" Exp ")" --parens

    numlit  = digit+ ("." digit+)? (("e" | "E") ("+" | "-")? digit+)?
    strlit  = "\"" char* "\""
    char    = ~"'" ~"\"" any
            | "\\" ("\'" | "\"" | "n" | "\\" | hex ) --escape
    hex     = "\\u{" hexDigit hexDigit? hexDigit? hexDigit? hexDigit? hexDigit? "}"
    FuncCall = id "[" ListOf<Exp, ","> "]"
    id      = ~keyword (letter | "@") idAllowed*
    idAllowed = alnum | "_" | "@" | "$"
    func = "func" ~alnum
    if = "if" ~alnum
    else = "else" ~alnum
    keyword = func | if | else | "end"
    space  += "--" (~"\n" any)* "\n" --comment
}